python src/run_pipeline.py --input_file dataset/Concept202408.csv --output_dir output --save_intermediate --n_opt_trials 1 --balance_classes

Начало выполнения: 2025-05-10 13:55:40

--- Шаг 1: Предобработка данных ---
Загрузка данных из dataset/Concept202408.csv...
Данные загружены. Размерность: (418888, 19)
Выполнение предобработки данных...
Начало предобработки данных
Трансформеры будут сохранены в: output\models/transformers
Обработка пропущенных значений...
Количество пропущенных значений до обработки: 7679
Количество пропущенных значений после обработки: 0
Обработано пропущенных значений: 7679
Обработка выбросов...
Переменная 'Cумма покупки': обнаружено 11762 выбросов (2.81%)
Переменная 'Начислено бонусов': обнаружено 18793 выбросов (4.49%)
Переменная 'Списано бонусов': обнаружено 80007 выбросов (19.10%)
Переменная 'Средняя сумма покупок': обнаружено 17995 выбросов (4.30%)
Переменная 'Частота, раз/мес': обнаружено 88335 выбросов (21.09%)
Переменная 'Баланс накопленный': обнаружено 31248 выбросов (7.46%)
Переменная 'Баланс подарочный': обнаружено 67415 выбросов (16.09%)
Нормализация числовых признаков...
Применено масштабирование к диапазону [0, 1] для переменных: Cумма покупки, Начислено бонусов, Списано бонусов, Средняя сумма покупок, Баланс накопленный, Баланс подарочный
MinMaxScaler для monetary_vars сохранен в output\models/transformers
Применена стандартизация для переменных: Частота, раз/мес, Покупок, в днях
StandardScaler для frequency_vars сохранен в output\models/transformers
Кодирование категориальных переменных...
Кодирование переменной 'Пол': {'M': np.int64(0), 'Ж': np.int64(1)}
LabelEncoder для 'Пол' сохранен в output\models/transformers
Маппинг для 'Пол' сохранен в output\models/transformers
Список топ-10 локаций сохранен в output\models/transformers
Созданы One-Hot encoded признаки для топ-10 локаций и категория 'Other'
Созданы one-hot encoding признаки для категорий товаров
Создание агрегированных данных на уровне клиента...
Типы данных столбцов:
Клиент: int64
Пол: object
Точка продаж где оформлена карта: object
Дата оформления карты: object
Дата покупки: object
Точка продаж: object
Название товара: object
Cумма покупки: float64
Количество: int64
Скидка внешняя: int64
Начислено бонусов: float64
Списано бонусов: float64
Дата первого чека: object
Дата последнего чека: object
Покупок, в днях: float64
Частота, раз/мес: float64
Средняя сумма покупок: float64
Баланс накопленный: float64
Баланс подарочный: float64
Пол_encoded: int64
location_Интернет-магазин: int64
location_МскКалитаAcoola_Maxi: int64
location_МскМариAcoola_Maxi: int64
location_КазаньТандемAcoola: int64
location_МскБалашихаВертикальAcoola_Maxi: int64
location_МскКолумбусAcoola: int64
location_ТЦ_Южный_Полюс_Санкт-Петербург_г_Пражская_ул_д_48_503: int64
location_г_Чебоксары_Приволжский_б-р_д2_помещение_3: int64
location_СПбМеркурийAcoola: int64
location_СПбНевский-2Acoola: int64
location_Other: int64
product_category: object
product_Аксессуары: bool
product_Брюки: bool
product_Верхняя одежда: bool
product_Другое: bool
product_Костюмы: bool
product_Платья: bool
product_Рубашки: bool
product_Футболки: bool
product_Юбки: bool
Применение следующих функций агрегации: {'Cумма покупки': ['count', 'sum', 'mean', 'std'], 'Дата покупки': ['min', 'max'], 'Начислено бонусов': ['sum', 'mean'], 'Списано бонусов': ['sum', 'mean'], 'Пол_encoded': 'first', 'location_Интернет-магазин': 'mean', 'location_МскКалитаAcoola_Maxi': 'mean', 'location_МскМариAcoola_Maxi': 'mean', 'location_КазаньТандемAcoola': 'mean', 'location_МскБалашихаВертикальAcoola_Maxi': 'mean', 'location_МскКолумбусAcoola': 'mean', 'location_ТЦ_Южный_Полюс_Санкт-Петербург_г_Пражская_ул_д_48_503': 'mean', 'location_г_Чебоксары_Приволжский_б-р_д2_помещение_3': 'mean', 'location_СПбМеркурийAcoola': 'mean', 'location_СПбНевский-2Acoola': 'mean', 'location_Other': 'mean', 'product_category': 'first', 'product_Аксессуары': 'mean', 'product_Брюки': 'mean', 'product_Верхняя одежда': 'mean', 'product_Другое': 'mean', 'product_Костюмы': 'mean', 'product_Платья': 'mean', 'product_Рубашки': 'mean', 'product_Футболки': 'mean', 'product_Юбки': 'mean'}
Создан агрегированный датасет с 118377 клиентами и 37 признаками
Подготовка итогового датасета...
RFM-анализ выполнен, созданы сегменты лояльности клиентов
Удалены строки с пропущенными значениями. Итоговый размер датасета: 91485 клиентов
Подготовлен итоговый датасет для моделирования, содержащий 91485 клиентов и 43 признаков
Предобработанные данные сохранены в output/preprocessed_data.csv
Создание базового RFM-анализа...
Подготовка итогового датасета...
RFM-анализ выполнен, созданы сегменты лояльности клиентов
Подготовлен итоговый датасет для моделирования, содержащий 91485 клиентов и 43 признаков
Базовый RFM-датасет сохранен в output\base_rfm_dataset.pkl

--- Шаг 2: Создание признаков лояльности ---
Создание расширенных признаков лояльности...
Создание расширенных признаков лояльности...
Добавлены расширенные признаки использования бонусной программы
Добавлены признаки стабильности покупок
Добавлен взвешенный RFM-показатель
Создано 7 новых признаков лояльности
Выполнение кластеризации клиентов...
Выполнение кластеризации клиентов на 5 кластеров...
Признаки для кластеризации (40): ['frequency', 'monetary', 'avg_purchase', 'Cумма покупки_std', 'Начислено бонусов_sum', 'Начислено бонусов_mean', 'Списано бонусов_sum', 'Списано бонусов_mean', 'Пол_encoded_first', 'location_Интернет-магазин_mean', 'location_МскКалитаAcoola_Maxi_mean', 'location_МскМариAcoola_Maxi_mean', 'location_КазаньТандемAcoola_mean', 'location_МскБалашихаВертикальAcoola_Maxi_mean', 'location_МскКолумбусAcoola_mean', 'location_ТЦ_Южный_Полюс_Санкт-Петербург_г_Пражская_ул_д_48_503_mean', 'location_г_Чебоксары_Приволжский_б-р_д2_помещение_3_mean', 'location_СПбМеркурийAcoola_mean', 'location_СПбНевский-2Acoola_mean', 'location_Other_mean', 'product_Аксессуары_mean', 'product_Брюки_mean', 'product_Верхняя одежда_mean', 'product_Другое_mean', 'product_Костюмы_mean', 'product_Платья_mean', 'product_Рубашки_mean', 'product_Футболки_mean', 'product_Юбки_mean', 'recency', 'activity_period', 'bonus_usage_ratio', 'purchase_frequency', 'bonus_earning_ratio', 'bonus_activity', 'recency_ratio', 'purchase_density', 'purchase_amount_cv', 'purchase_stability', 'weighted_RFM']
StandardScaler для KMeans сохранен в output\models\transformers
Список признаков для KMeans сохранен в output\models\transformers
KMeans модель сохранена в output\models\transformers
Характеристики полученных кластеров:
          recency  frequency  monetary  avg_purchase  count
cluster
0        1.878650  12.902775  4.484670      0.376949   5513
1        0.380846   3.867343  1.621380      0.434875  30364
2        0.441525   3.615503  0.739019      0.208309  33878
3        1.308632   4.285831  1.723314      0.446096   1228
4        6.829285   3.691640  1.179368      0.323867  20502
Распределение кластеров по сегментам лояльности:
cluster_segment
Низколояльные        33878
Лояльные             30364
Отток                20502
Высоколояльные        5513
Умеренно лояльные     1228
Name: count, dtype: int64
Расчет улучшенного показателя лояльности...
Расчет улучшенного показателя лояльности с PCA...
Признаки для PCA (40): ['frequency', 'monetary', 'avg_purchase', 'Cумма покупки_std', 'Начислено бонусов_sum', 'Начислено бонусов_mean', 'Списано бонусов_sum', 'Списано бонусов_mean', 'Пол_encoded_first', 'location_Интернет-магазин_mean', 'location_МскКалитаAcoola_Maxi_mean', 'location_МскМариAcoola_Maxi_mean', 'location_КазаньТандемAcoola_mean', 'location_МскБалашихаВертикальAcoola_Maxi_mean', 'location_МскКолумбусAcoola_mean', 'location_ТЦ_Южный_Полюс_Санкт-Петербург_г_Пражская_ул_д_48_503_mean', 'location_г_Чебоксары_Приволжский_б-р_д2_помещение_3_mean', 'location_СПбМеркурийAcoola_mean', 'location_СПбНевский-2Acoola_mean', 'location_Other_mean', 'product_Аксессуары_mean', 'product_Брюки_mean', 'product_Верхняя одежда_mean', 'product_Другое_mean', 'product_Костюмы_mean', 'product_Платья_mean', 'product_Рубашки_mean', 'product_Футболки_mean', 'product_Юбки_mean', 'recency', 'activity_period', 'bonus_usage_ratio', 'purchase_frequency', 'bonus_earning_ratio', 'bonus_activity', 'recency_ratio', 'purchase_density', 'purchase_amount_cv', 'purchase_stability', 'weighted_RFM']
StandardScaler для PCA сохранен в output\models\transformers
Список признаков для PCA сохранен в output\models\transformers
PCA модель сохранена в output\models\transformers
Добавлено 3 PCA компонент(ы).
Формирование дискретных категорий лояльности методом quantile...
Распределение клиентов по категориям лояльности:
enhanced_loyalty_score_category
Высоколояльные    79930
Отток             11555
Name: count, dtype: int64
Границы категорий: [0, 1.0, 1.0, 1.0, 1.0, 1]
Оценка распределения клиентов по категориям лояльности...
Общее количество клиентов: 91485
Количество категорий: 2
Распределение клиентов по категориям:
  Высоколояльные: 79930 (87.37%)
  Отток: 11555 (12.63%)
Максимальный дисбаланс: 6.92:1
Нормализованная энтропия распределения: 0.5472 (из 1.0)
Оценка: Распределение категорий имеет значительный дисбаланс
Рекомендации:
  - Рассмотрите другой метод формирования категорий (например, квантили)
  - Объедините малочисленные категории
  - Разделите многочисленные категории на подкатегории
Обнаружен дисбаланс в распределении категорий.
Рекомендуется оптимизировать границы категорий.
Соответствие с исходной RFM-сегментацией: 41.44%
Формирование профилей категорий лояльности...
Сформированы профили категорий лояльности

Профили категорий лояльности:
                                  recency  frequency  ...  размер_категории  доля_категории  
enhanced_loyalty_score_category                       ...
Высоколояльные                   1.394908   4.556675  ...             79930        0.873695  
Отток                            5.798788   2.404241  ...             11555        0.126305  

[2 rows x 13 columns]
Расчет улучшенного показателя лояльности завершен
Распределение по категориям лояльности:
enhanced_loyalty_score_category
Высоколояльные    79930
Отток             11555
Name: count, dtype: int64
Подготовка финального датасета для моделирования...
Подготовка итогового датасета с улучшенными признаками лояльности...
Обнаружены две фактические категории: 'Отток' и 'Высоколояльные'. Маппинг: Отток -> 0, Высоколояльные -> 1
Распределение целевой переменной:
  Класс 0: 11555 (12.63%)
  Класс 1: 79930 (87.37%)
Оценка распределения клиентов по категориям лояльности...
Общее количество клиентов: 91485
Количество категорий: 2
Распределение клиентов по категориям:
  0: 11555 (12.63%)
  1: 79930 (87.37%)
Максимальный дисбаланс: 6.92:1
Нормализованная энтропия распределения: 0.5472 (из 1.0)
Оценка: Распределение категорий имеет значительный дисбаланс
Рекомендации:
  - Рассмотрите другой метод формирования категорий (например, квантили)
  - Объедините малочисленные категории
  - Разделите многочисленные категории на подкатегории
Выполняется балансировка классов методом 'none'...
Балансировка классов отключена.
Оценка информативности признаков...
Оценка информативности признаков...
Вычисление корреляций Пирсона...
Вычисление взаимной информации...
Вычисление Permutation Importance...
Вычисление SHAP Values...
DEBUG SHAP: type of explainer.shap_values(X_test): <class 'numpy.ndarray'>
DEBUG SHAP: shape of ndarray: (27446, 44, 2)
DEBUG SHAP: shape of shap_values_for_importance: (27446, 44)
DEBUG SHAP: shape of mean_abs_shap: (44,)
DEBUG SHAP: length of features list: 44
Результаты оценки важности признаков сохранены в output\feature_importance\feature_importance.csv
Оценка информативности признаков завершена. Проанализировано 44 признаков.
Топ-10 наиболее важных признаков:
1. recency_ratio: 0.9228
2. monetary: 0.6178
3. pca_component_3: 0.6014
4. recency: 0.5608
5. pca_component_1: 0.4746
6. cluster: 0.3583
7. frequency: 0.3168
8. purchase_density: 0.3003
9. purchase_frequency: 0.2755
10. bonus_activity: 0.2441
Выбор наиболее информативных признаков (метод: score, порог: 0.05, макс: 50)...
Отобрано 20 признаков по важности
Итоговое количество признаков для моделирования: 20
Признаки, используемые для обучения: ['recency_ratio', 'monetary', 'pca_component_3', 'recency', 'pca_component_1', 'cluster', 'frequency', 'purchase_density', 'purchase_frequency', 'bonus_activity', 'purchase_amount_cv', 'Начислено бонусов_sum', 'avg_purchase', 'Cумма покупки_std', 'purchase_stability', 'pca_component_2', 'bonus_earning_ratio', 'Начислено бонусов_mean', 'product_Другое_mean', 'product_Брюки_mean']
Разделение на обучающую и тестовую выборки (тест: 20.0%)...
Целевая переменная для обучения и стратификации: loyalty_target
Размер обучающей выборки: 73188 примеров
Размер тестовой выборки: 18297 примеров
Распределение классов в обучающей выборке:
  Класс 0: 12.63%
  Класс 1: 87.37%
Распределение классов в тестовой выборке:
  Класс 0: 12.63%
  Класс 1: 87.37%
Обучающие и тестовые данные сохранены в output\model_data
Обучающие и тестовые выборки сохранены в директории output\model_data
Подготовка итогового датасета завершена.
Количество признаков: 20
Размер датасета (X) перед train/test split: 91485 примеров
Датасет с признаками лояльности сохранен в output\loyalty_features_dataset.pkl
Финальный датасет для моделирования сохранен в output\loyalty_dataset.pkl

--- Шаг 3: Обучение моделей классификации ---
Размер обучающей выборки: (73188, 20)
Размер тестовой выборки: (18297, 20)
Количество признаков: 20
Распределение классов (обучающая выборка):
  - Высоколояльные: 9244 (12.63%)
  - Отток: 63944 (87.37%)
Применение весов классов для учета несбалансированности...
Добавление моделей в тренер...
Обучение моделей...
Обучение модели: logistic_regression
Обучение модели: random_forest
Обучение модели: gradient_boosting
Обучение модели: xgboost
Обучение модели: lightgbm
Обучение модели: svm
Оценка моделей...
Оценка модели: logistic_regression
Оценка модели: random_forest
Оценка модели: gradient_boosting
Оценка модели: xgboost
Оценка модели: lightgbm
Оценка модели: svm
Сохранение обученных моделей и метрик в output\models\trained_models_bundle.pkl...
Модели и метрики сохранены.
Создание сравнительных визуализаций...
Визуализация важности признаков...
График важности признаков для random_forest сохранен в output\results\plots\feature_importance_random_forest_20250510_140358.png
График важности признаков для xgboost сохранен в output\results\plots\feature_importance_xgboost_20250510_140359.png
График важности признаков для lightgbm сохранен в output\results\plots\feature_importance_lightgbm_20250510_140400.png

Лучшая модель по F1-macro: lightgbm
Метрики лучшей модели:
  - accuracy: 1.0000
  - precision_macro: 1.0000
  - recall_macro: 1.0000
  - f1_macro: 1.0000
  - classification_report: (dict with keys: 0, 1, accuracy, macro avg, weighted avg)
  - confusion_matrix: (list of length 2)
  - y_pred: (list of length 18297)
  - y_proba: (list of length 18297)
Лучшая модель сохранена в output\models\best_model.pkl

Выполнение завершено в 2025-05-10 14:04:00
Общее время выполнения: 0:08:20.236364

Результаты сохранены в директории:
  - output
